apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.cmakthat'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url project.nightliesUrl
        }
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    // squelching errors from msa
    android {
        lintOptions {
            abortOnError false
        }
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}


uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        pom {
           setGroupId project.mavenGroupId
           setArtifactId project.mavenArtifactId
           setVersion project.mavenVersion
        }
        repository (url: project.mavenRepoUrl) {
            authentication(
                 // put these values in local file ~/.gradle/gradle.properties
                 userName: project.hasProperty("bintrayUsername") ? project.bintrayUsername : "",
                 password: project.hasProperty("bintrayApikey") ? project.bintrayApikey : ""
            )
        }
    }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath())
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

